// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cpp_subscriber/proto/impact_analysis_response.proto

#include "impact_analysis_response.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_cpp_5fsubscriber_2fproto_2fconfig_5fchange_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_ConfigChangeRequest_cpp_5fsubscriber_2fproto_2fconfig_5fchange_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_QueueImpactAnalysis_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2ftimestamp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto;
class QueueImpactAnalysisDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<QueueImpactAnalysis> _instance;
} _QueueImpactAnalysis_default_instance_;
class ImpactAnalysisResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImpactAnalysisResponse> _instance;
} _ImpactAnalysisResponse_default_instance_;
static void InitDefaultsscc_info_ImpactAnalysisResponse_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_ImpactAnalysisResponse_default_instance_;
    new (ptr) ::ImpactAnalysisResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ImpactAnalysisResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ImpactAnalysisResponse_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ImpactAnalysisResponse_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto}, {
      &scc_info_QueueImpactAnalysis_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto.base,
      &scc_info_ConfigChangeRequest_cpp_5fsubscriber_2fproto_2fconfig_5fchange_2eproto.base,}};

static void InitDefaultsscc_info_QueueImpactAnalysis_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_QueueImpactAnalysis_default_instance_;
    new (ptr) ::QueueImpactAnalysis();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::QueueImpactAnalysis::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_QueueImpactAnalysis_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_QueueImpactAnalysis_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto}, {
      &scc_info_Timestamp_google_2fprotobuf_2ftimestamp_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::QueueImpactAnalysis, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::QueueImpactAnalysis, queue_id_),
  PROTOBUF_FIELD_OFFSET(::QueueImpactAnalysis, desired_sla_min_),
  PROTOBUF_FIELD_OFFSET(::QueueImpactAnalysis, previous_sla_min_),
  PROTOBUF_FIELD_OFFSET(::QueueImpactAnalysis, new_sla_min_),
  PROTOBUF_FIELD_OFFSET(::QueueImpactAnalysis, previous_avg_video_volume_per_hour_),
  PROTOBUF_FIELD_OFFSET(::QueueImpactAnalysis, new_avg_video_volume_per_hour_),
  PROTOBUF_FIELD_OFFSET(::QueueImpactAnalysis, analysis_period_start_),
  PROTOBUF_FIELD_OFFSET(::QueueImpactAnalysis, analysis_period_end_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ImpactAnalysisResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ImpactAnalysisResponse, error_message_),
  PROTOBUF_FIELD_OFFSET(::ImpactAnalysisResponse, queue_impact_analysis_list_),
  PROTOBUF_FIELD_OFFSET(::ImpactAnalysisResponse, request_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::QueueImpactAnalysis)},
  { 13, -1, sizeof(::ImpactAnalysisResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_QueueImpactAnalysis_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ImpactAnalysisResponse_default_instance_),
};

const char descriptor_table_protodef_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n3cpp_subscriber/proto/impact_analysis_r"
  "esponse.proto\032\037google/protobuf/timestamp"
  ".proto\032(cpp_subscriber/proto/config_chan"
  "ge.proto\"\266\002\n\023QueueImpactAnalysis\022\020\n\010queu"
  "e_id\030\001 \001(\t\022\027\n\017desired_SLA_min\030\002 \001(\005\022\030\n\020p"
  "revious_SLA_min\030\003 \001(\005\022\023\n\013new_SLA_min\030\004 \001"
  "(\005\022*\n\"previous_avg_video_volume_per_hour"
  "\030\005 \001(\005\022%\n\035new_avg_video_volume_per_hour\030"
  "\006 \001(\005\0229\n\025analysis_period_start\030\007 \001(\0132\032.g"
  "oogle.protobuf.Timestamp\0227\n\023analysis_per"
  "iod_end\030\010 \001(\0132\032.google.protobuf.Timestam"
  "p\"\220\001\n\026ImpactAnalysisResponse\022\025\n\rerror_me"
  "ssage\030\001 \001(\t\0228\n\032queue_Impact_analysis_lis"
  "t\030\002 \003(\0132\024.QueueImpactAnalysis\022%\n\007request"
  "\030\003 \001(\0132\024.ConfigChangeRequestb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto_deps[2] = {
  &::descriptor_table_cpp_5fsubscriber_2fproto_2fconfig_5fchange_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto_sccs[2] = {
  &scc_info_ImpactAnalysisResponse_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto.base,
  &scc_info_QueueImpactAnalysis_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto_once;
static bool descriptor_table_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto = {
  &descriptor_table_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto_initialized, descriptor_table_protodef_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto, "cpp_subscriber/proto/impact_analysis_response.proto", 596,
  &descriptor_table_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto_once, descriptor_table_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto_sccs, descriptor_table_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto_deps, 2, 2,
  schemas, file_default_instances, TableStruct_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto::offsets,
  file_level_metadata_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto, 2, file_level_enum_descriptors_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto, file_level_service_descriptors_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto), true);

// ===================================================================

void QueueImpactAnalysis::InitAsDefaultInstance() {
  ::_QueueImpactAnalysis_default_instance_._instance.get_mutable()->analysis_period_start_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
  ::_QueueImpactAnalysis_default_instance_._instance.get_mutable()->analysis_period_end_ = const_cast< PROTOBUF_NAMESPACE_ID::Timestamp*>(
      PROTOBUF_NAMESPACE_ID::Timestamp::internal_default_instance());
}
class QueueImpactAnalysis::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Timestamp& analysis_period_start(const QueueImpactAnalysis* msg);
  static const PROTOBUF_NAMESPACE_ID::Timestamp& analysis_period_end(const QueueImpactAnalysis* msg);
};

const PROTOBUF_NAMESPACE_ID::Timestamp&
QueueImpactAnalysis::_Internal::analysis_period_start(const QueueImpactAnalysis* msg) {
  return *msg->analysis_period_start_;
}
const PROTOBUF_NAMESPACE_ID::Timestamp&
QueueImpactAnalysis::_Internal::analysis_period_end(const QueueImpactAnalysis* msg) {
  return *msg->analysis_period_end_;
}
void QueueImpactAnalysis::clear_analysis_period_start() {
  if (GetArenaNoVirtual() == nullptr && analysis_period_start_ != nullptr) {
    delete analysis_period_start_;
  }
  analysis_period_start_ = nullptr;
}
void QueueImpactAnalysis::clear_analysis_period_end() {
  if (GetArenaNoVirtual() == nullptr && analysis_period_end_ != nullptr) {
    delete analysis_period_end_;
  }
  analysis_period_end_ = nullptr;
}
QueueImpactAnalysis::QueueImpactAnalysis()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:QueueImpactAnalysis)
}
QueueImpactAnalysis::QueueImpactAnalysis(const QueueImpactAnalysis& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  queue_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_queue_id().empty()) {
    queue_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.queue_id_);
  }
  if (from._internal_has_analysis_period_start()) {
    analysis_period_start_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.analysis_period_start_);
  } else {
    analysis_period_start_ = nullptr;
  }
  if (from._internal_has_analysis_period_end()) {
    analysis_period_end_ = new PROTOBUF_NAMESPACE_ID::Timestamp(*from.analysis_period_end_);
  } else {
    analysis_period_end_ = nullptr;
  }
  ::memcpy(&desired_sla_min_, &from.desired_sla_min_,
    static_cast<size_t>(reinterpret_cast<char*>(&new_avg_video_volume_per_hour_) -
    reinterpret_cast<char*>(&desired_sla_min_)) + sizeof(new_avg_video_volume_per_hour_));
  // @@protoc_insertion_point(copy_constructor:QueueImpactAnalysis)
}

void QueueImpactAnalysis::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_QueueImpactAnalysis_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto.base);
  queue_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&analysis_period_start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_avg_video_volume_per_hour_) -
      reinterpret_cast<char*>(&analysis_period_start_)) + sizeof(new_avg_video_volume_per_hour_));
}

QueueImpactAnalysis::~QueueImpactAnalysis() {
  // @@protoc_insertion_point(destructor:QueueImpactAnalysis)
  SharedDtor();
}

void QueueImpactAnalysis::SharedDtor() {
  queue_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete analysis_period_start_;
  if (this != internal_default_instance()) delete analysis_period_end_;
}

void QueueImpactAnalysis::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const QueueImpactAnalysis& QueueImpactAnalysis::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_QueueImpactAnalysis_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto.base);
  return *internal_default_instance();
}


void QueueImpactAnalysis::Clear() {
// @@protoc_insertion_point(message_clear_start:QueueImpactAnalysis)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  queue_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && analysis_period_start_ != nullptr) {
    delete analysis_period_start_;
  }
  analysis_period_start_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && analysis_period_end_ != nullptr) {
    delete analysis_period_end_;
  }
  analysis_period_end_ = nullptr;
  ::memset(&desired_sla_min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_avg_video_volume_per_hour_) -
      reinterpret_cast<char*>(&desired_sla_min_)) + sizeof(new_avg_video_volume_per_hour_));
  _internal_metadata_.Clear();
}

const char* QueueImpactAnalysis::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string queue_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_queue_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "QueueImpactAnalysis.queue_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 desired_SLA_min = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          desired_sla_min_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 previous_SLA_min = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          previous_sla_min_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 new_SLA_min = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          new_sla_min_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 previous_avg_video_volume_per_hour = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          previous_avg_video_volume_per_hour_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 new_avg_video_volume_per_hour = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          new_avg_video_volume_per_hour_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp analysis_period_start = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_analysis_period_start(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp analysis_period_end = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_analysis_period_end(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* QueueImpactAnalysis::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:QueueImpactAnalysis)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string queue_id = 1;
  if (this->queue_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_queue_id().data(), static_cast<int>(this->_internal_queue_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "QueueImpactAnalysis.queue_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_queue_id(), target);
  }

  // int32 desired_SLA_min = 2;
  if (this->desired_sla_min() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_desired_sla_min(), target);
  }

  // int32 previous_SLA_min = 3;
  if (this->previous_sla_min() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_previous_sla_min(), target);
  }

  // int32 new_SLA_min = 4;
  if (this->new_sla_min() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_new_sla_min(), target);
  }

  // int32 previous_avg_video_volume_per_hour = 5;
  if (this->previous_avg_video_volume_per_hour() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_previous_avg_video_volume_per_hour(), target);
  }

  // int32 new_avg_video_volume_per_hour = 6;
  if (this->new_avg_video_volume_per_hour() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_new_avg_video_volume_per_hour(), target);
  }

  // .google.protobuf.Timestamp analysis_period_start = 7;
  if (this->has_analysis_period_start()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::analysis_period_start(this), target, stream);
  }

  // .google.protobuf.Timestamp analysis_period_end = 8;
  if (this->has_analysis_period_end()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::analysis_period_end(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:QueueImpactAnalysis)
  return target;
}

size_t QueueImpactAnalysis::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:QueueImpactAnalysis)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string queue_id = 1;
  if (this->queue_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_queue_id());
  }

  // .google.protobuf.Timestamp analysis_period_start = 7;
  if (this->has_analysis_period_start()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *analysis_period_start_);
  }

  // .google.protobuf.Timestamp analysis_period_end = 8;
  if (this->has_analysis_period_end()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *analysis_period_end_);
  }

  // int32 desired_SLA_min = 2;
  if (this->desired_sla_min() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_desired_sla_min());
  }

  // int32 previous_SLA_min = 3;
  if (this->previous_sla_min() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_previous_sla_min());
  }

  // int32 new_SLA_min = 4;
  if (this->new_sla_min() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_new_sla_min());
  }

  // int32 previous_avg_video_volume_per_hour = 5;
  if (this->previous_avg_video_volume_per_hour() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_previous_avg_video_volume_per_hour());
  }

  // int32 new_avg_video_volume_per_hour = 6;
  if (this->new_avg_video_volume_per_hour() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_new_avg_video_volume_per_hour());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueueImpactAnalysis::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:QueueImpactAnalysis)
  GOOGLE_DCHECK_NE(&from, this);
  const QueueImpactAnalysis* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<QueueImpactAnalysis>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:QueueImpactAnalysis)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:QueueImpactAnalysis)
    MergeFrom(*source);
  }
}

void QueueImpactAnalysis::MergeFrom(const QueueImpactAnalysis& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:QueueImpactAnalysis)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.queue_id().size() > 0) {

    queue_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.queue_id_);
  }
  if (from.has_analysis_period_start()) {
    _internal_mutable_analysis_period_start()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_analysis_period_start());
  }
  if (from.has_analysis_period_end()) {
    _internal_mutable_analysis_period_end()->PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_analysis_period_end());
  }
  if (from.desired_sla_min() != 0) {
    _internal_set_desired_sla_min(from._internal_desired_sla_min());
  }
  if (from.previous_sla_min() != 0) {
    _internal_set_previous_sla_min(from._internal_previous_sla_min());
  }
  if (from.new_sla_min() != 0) {
    _internal_set_new_sla_min(from._internal_new_sla_min());
  }
  if (from.previous_avg_video_volume_per_hour() != 0) {
    _internal_set_previous_avg_video_volume_per_hour(from._internal_previous_avg_video_volume_per_hour());
  }
  if (from.new_avg_video_volume_per_hour() != 0) {
    _internal_set_new_avg_video_volume_per_hour(from._internal_new_avg_video_volume_per_hour());
  }
}

void QueueImpactAnalysis::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:QueueImpactAnalysis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueueImpactAnalysis::CopyFrom(const QueueImpactAnalysis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:QueueImpactAnalysis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueueImpactAnalysis::IsInitialized() const {
  return true;
}

void QueueImpactAnalysis::InternalSwap(QueueImpactAnalysis* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  queue_id_.Swap(&other->queue_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(analysis_period_start_, other->analysis_period_start_);
  swap(analysis_period_end_, other->analysis_period_end_);
  swap(desired_sla_min_, other->desired_sla_min_);
  swap(previous_sla_min_, other->previous_sla_min_);
  swap(new_sla_min_, other->new_sla_min_);
  swap(previous_avg_video_volume_per_hour_, other->previous_avg_video_volume_per_hour_);
  swap(new_avg_video_volume_per_hour_, other->new_avg_video_volume_per_hour_);
}

::PROTOBUF_NAMESPACE_ID::Metadata QueueImpactAnalysis::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ImpactAnalysisResponse::InitAsDefaultInstance() {
  ::_ImpactAnalysisResponse_default_instance_._instance.get_mutable()->request_ = const_cast< ::ConfigChangeRequest*>(
      ::ConfigChangeRequest::internal_default_instance());
}
class ImpactAnalysisResponse::_Internal {
 public:
  static const ::ConfigChangeRequest& request(const ImpactAnalysisResponse* msg);
};

const ::ConfigChangeRequest&
ImpactAnalysisResponse::_Internal::request(const ImpactAnalysisResponse* msg) {
  return *msg->request_;
}
void ImpactAnalysisResponse::clear_request() {
  if (GetArenaNoVirtual() == nullptr && request_ != nullptr) {
    delete request_;
  }
  request_ = nullptr;
}
ImpactAnalysisResponse::ImpactAnalysisResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ImpactAnalysisResponse)
}
ImpactAnalysisResponse::ImpactAnalysisResponse(const ImpactAnalysisResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      queue_impact_analysis_list_(from.queue_impact_analysis_list_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error_message().empty()) {
    error_message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from._internal_has_request()) {
    request_ = new ::ConfigChangeRequest(*from.request_);
  } else {
    request_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ImpactAnalysisResponse)
}

void ImpactAnalysisResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImpactAnalysisResponse_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto.base);
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  request_ = nullptr;
}

ImpactAnalysisResponse::~ImpactAnalysisResponse() {
  // @@protoc_insertion_point(destructor:ImpactAnalysisResponse)
  SharedDtor();
}

void ImpactAnalysisResponse::SharedDtor() {
  error_message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete request_;
}

void ImpactAnalysisResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImpactAnalysisResponse& ImpactAnalysisResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImpactAnalysisResponse_cpp_5fsubscriber_2fproto_2fimpact_5fanalysis_5fresponse_2eproto.base);
  return *internal_default_instance();
}


void ImpactAnalysisResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ImpactAnalysisResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  queue_impact_analysis_list_.Clear();
  error_message_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && request_ != nullptr) {
    delete request_;
  }
  request_ = nullptr;
  _internal_metadata_.Clear();
}

const char* ImpactAnalysisResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string error_message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_error_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ImpactAnalysisResponse.error_message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .QueueImpactAnalysis queue_Impact_analysis_list = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_queue_impact_analysis_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // .ConfigChangeRequest request = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImpactAnalysisResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ImpactAnalysisResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string error_message = 1;
  if (this->error_message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ImpactAnalysisResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_error_message(), target);
  }

  // repeated .QueueImpactAnalysis queue_Impact_analysis_list = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_queue_impact_analysis_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_queue_impact_analysis_list(i), target, stream);
  }

  // .ConfigChangeRequest request = 3;
  if (this->has_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::request(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ImpactAnalysisResponse)
  return target;
}

size_t ImpactAnalysisResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ImpactAnalysisResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .QueueImpactAnalysis queue_Impact_analysis_list = 2;
  total_size += 1UL * this->_internal_queue_impact_analysis_list_size();
  for (const auto& msg : this->queue_impact_analysis_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string error_message = 1;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // .ConfigChangeRequest request = 3;
  if (this->has_request()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *request_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImpactAnalysisResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ImpactAnalysisResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImpactAnalysisResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImpactAnalysisResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ImpactAnalysisResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ImpactAnalysisResponse)
    MergeFrom(*source);
  }
}

void ImpactAnalysisResponse::MergeFrom(const ImpactAnalysisResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ImpactAnalysisResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  queue_impact_analysis_list_.MergeFrom(from.queue_impact_analysis_list_);
  if (from.error_message().size() > 0) {

    error_message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.error_message_);
  }
  if (from.has_request()) {
    _internal_mutable_request()->::ConfigChangeRequest::MergeFrom(from._internal_request());
  }
}

void ImpactAnalysisResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ImpactAnalysisResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImpactAnalysisResponse::CopyFrom(const ImpactAnalysisResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ImpactAnalysisResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImpactAnalysisResponse::IsInitialized() const {
  return true;
}

void ImpactAnalysisResponse::InternalSwap(ImpactAnalysisResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  queue_impact_analysis_list_.InternalSwap(&other->queue_impact_analysis_list_);
  error_message_.Swap(&other->error_message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(request_, other->request_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImpactAnalysisResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::QueueImpactAnalysis* Arena::CreateMaybeMessage< ::QueueImpactAnalysis >(Arena* arena) {
  return Arena::CreateInternal< ::QueueImpactAnalysis >(arena);
}
template<> PROTOBUF_NOINLINE ::ImpactAnalysisResponse* Arena::CreateMaybeMessage< ::ImpactAnalysisResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ImpactAnalysisResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
